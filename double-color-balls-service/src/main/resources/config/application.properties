#server.port=7001
server.port=7002

#应用名对应dubbo界面 服务归属 应用
spring.application.name=dcb-s
#============== kafka ===================
# 指定kafka server的地址，集群配多个，中间，逗号隔开
spring.kafka.bootstrap-servers=127.0.0.1:9093,127.0.0.1:9094,127.0.0.1:9095
#=============== consumer  =======================
# 指定默认消费者group id --> 由于在kafka中，同一组中的consumer不会读取到同一个消息，依靠groud.id设置组名
spring.kafka.consumer.group-id=dcb-group
# smallest和largest才有效，如果smallest重新0开始读取，如果是largest从logfile的offset读取。一般情况下我们都是设置smallest
spring.kafka.consumer.auto-offset-reset=earliest
# enable.auto.commit:true --> 设置自动提交offset
spring.kafka.consumer.enable-auto-commit=true
#如果'enable.auto.commit'为true，则消费者偏移自动提交给Kafka的频率（以毫秒为单位），默认值为5000。
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#active-mq
spring.activemq.broker-url=tcp://123.57.53.11:61616
#true 表示使用内置的MQ，false则连接服务器
spring.activemq.in-memory=false
spring.activemq.close-timeout=5000
spring.activemq.pool.enabled=true
spring.activemq.pool.max-connections=100
spring.activemq.send-timeout=3000
spring.activemq.user=admin
spring.activemq.password=admin


#dubbo页面显示   应用
dubbo.application.name=dcb-s1
dubbo.registry.protocol=zookeeper
dubbo.registry.address=123.57.53.11:2181,123.57.53.11:2182,123.57.53.11:2183
#dubbo.registry.port=2180

dubbo.protocol.id=dcb-ss
dubbo.protocol.name=dubbo
#暴露服务端口
dubbo.protocol.port=20891
dubbo.scan.base-packages=com.dtjy.service.impl

#单机版
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=123.57.53.11
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码
spring.redis.password=redis
spring.redis.pool.max-active=20
spring.redis.pool.max-wait=-1
spring.redis.pool.max-idle=500
spring.redis.pool.min-idle=5
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.lettuce.pool.max-active=100
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接
#spring.redis.lettuce.pool.max-idle=20
# 连接池中的最小空闲连接
#spring.redis.lettuce.pool.min-idle=8
# 连接超时时间（毫秒）
spring.redis.timeout=1000